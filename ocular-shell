#!/Users/garo/.rbenv/shims/ruby -Ilib

require 'ocular'
require 'optparse'
require 'ostruct'
require 'pp'


class OptparseExample

  #
  # Return a structure describing the options.
  #
  def self.parse(args)
    # The options specified on the command line will be collected in *options*.
    # We set default values here.
    options = OpenStruct.new
    options.library = []
    options.inplace = false
    options.encoding = "utf8"
    options.transfer_type = :auto
    options.verbose = false

    opt_parser = OptionParser.new do |opts|
      opts.banner = "Usage: ocular-shell [options] <script file>"

      opts.separator ""
      opts.separator "Specific options:"


      opts.separator ""
      opts.separator "Common options:"

      # No argument, shows at tail.  This will print an options summary.
      # Try it and see!
      opts.on_tail("-h", "--help", "Show this message") do
        puts opts
        exit
      end

      # Another typical switch to print the version.
      opts.on_tail("--version", "Show version") do
        puts Ocular::Version
        exit
      end
    end

    opt_parser.parse!(args)
    options
  end  # parse()

end  # class OptparseExample

options = OptparseExample.parse(ARGV)

if ARGV.length == 0
    puts "Missing script file to run. use -h to get more info"
    exit
end

Ocular::Settings.load_from_file(File.expand_path("~/.ocular.yaml"))

ef = Ocular::Event::EventFactory.new
proxy = ef.load_from_file(ARGV.shift)

context = Ocular::DSL::RunContext.new
eventbase = proxy.events[0]
eventbase.exec(context)

